import random
import time

random_arr = [random.randint(0, 1000000) for i in range(0, 1000000)]
def count_sort(arr):
    start_time = time.time()
    max_element = int(max(arr))
    min_element = int(min(arr))
    range_of_elements = max_element - min_element + 1
    count_arr = [0 for _ in range(range_of_elements)]
    output_arr = [0 for _ in range(len(arr))]
    for i in range(0, len(arr)):
        count_arr[arr[i]-min_element] += 1
    for i in range(1, len(count_arr)):
        count_arr[i] += count_arr[i-1]
    for i in range(len(arr)-1, -1, -1):
        output_arr[count_arr[arr[i] - min_element] - 1] = arr[i]
        count_arr[arr[i] - min_element] -= 1
    for i in range(0, len(arr)):
        arr[i] = output_arr[i]
    time_took = "Took " + str(time.time()-start_time) + "s"
    return arr, time_took

def binary_search(array, find):
    start_time = time.time()
    low = 0
    high = len(array)-1
    while high >= low:
        mid = (high + low) // 2
        if array[mid] == find:
            time_took = time.time() - start_time
            return mid, time_took
        elif array[mid] > find:
            high = mid-1
        else:
            low = mid+1
    else:
        time_took = time.time() - start_time
        return False, time_took


sorted_arr, time_took = count_sort(random_arr)
print(sorted_arr)
print(time_took)
print("====================")
# find = random.randint(0, 10000000)
find = 1000000
print(find)
result, time_took = binary_search(sorted_arr, find)
if result != False:
    print(f"Requested value {find} is present at index {str(result)}")
else:
    print(f"Requested value {find} is not present in array")
print(f"Took {time_took}s")
