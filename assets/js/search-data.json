{
  
    
        "post0": {
            "title": "APCSP Markdown page",
            "content": "Test page . Hello . This is a markdown page for APCSP class . Formats . italics bold code font . print(&quot;Example of a python code block&quot;) . quote block .",
            "url": "https://dolphinalt.github.io/APCSP-Fastpages/markdown/2022/08/21/APCSP-markdown-post.html",
            "relUrl": "/markdown/2022/08/21/APCSP-markdown-post.html",
            "date": " ‚Ä¢ Aug 21, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Python Quiz for APCSP",
            "content": "Python quiz . import getpass # question format, gets user answer def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg # lists of questions/answers prompts=[&quot;What command would you use to display text into the terminal?&quot;, &quot;What command would you use to ask the user for information?&quot;, &quot;What is the keyword used in Python to define a function?&quot;, &quot;How would you write a print statement to concatenate a string containing variable A with string &#39;Hello&#39;? (include print() and use &#39;&#39; instead of &quot; &quot;&quot;, &quot;How do we add a pre-made library to our code?&quot;, &quot;We use _______ to store information for later use.&quot;, &quot;Given the code, {variable = 1} what type of variable is this?&quot;, &quot;Given the code, {variable = 1.1} what type of variable is this?&quot;, &quot;Given the code, {variable = &#39;Hello&#39;} what type of variable is this?&quot;] answers=[&quot;print&quot;, &quot;input&quot;, &quot;def&quot;, &quot;print(&#39;hello&#39; + a)&quot;, &quot;import&quot;, &quot;variables&quot;, &quot;integer&quot;, &quot;float&quot;, &quot;string&quot;] correct = 0 questions = len(prompts) # corrects answers, awards a point if correct def gradeResponse(response, answer): global correct # convert to lowercase so ppl don&#39;t yell at me for scoring them as wrong when they went &quot;prinT&quot; if response.lower() == answer: print(f&quot;{response} is correct! nGood job :D&quot;) correct += 1 else: print(f&quot;{response} is incorrect! nBetter luck next time :(&quot;) # ask user if they want to proceed, exit if no print(f&quot;Hello {getpass.getuser()}!&quot;) print(f&quot;You will be asked {str(questions)} questions.&quot;) rsp = question_with_response(&quot;Are you ready to take a quiz? [Y/n]&quot;) if rsp.lower() == &quot;y&quot;: print(&quot;Lets get started!&quot;) else: print(&quot;Bye :(&quot;) exit() # cycle through all questions, score the questions for i in range(0, questions): rsp = question_with_response(prompts[i]) gradeResponse(rsp, answers[i]) # calculate percentage percentage=(correct/questions)*100 percentage=round(percentage, 2) # report score print(f&quot;You got a total of {correct} out of {questions} ({percentage}%)!&quot;) . Hello root! You will be asked 9 questions. Question: Are you ready to take a quiz? [Y/n] Lets get started! Question: What command would you use to display text into the terminal? prinT is correct! Good job :D Question: What command would you use to ask the user for information? input is correct! Good job :D Question: What is the keyword used in Python to define a function? def is correct! Good job :D Question: How would you write a print statement to concatenate a string containing variable A with string &#39;Hello&#39;? (include print() and use &#39;&#39; instead of &#34;&#34; print(&#39;Hello&#39; + A) is correct! Good job :D Question: How do we add a pre-made library to our code? imporT is correct! Good job :D Question: We use _______ to store information for later use. VaRiaBles is correct! Good job :D Question: Given the code, {variable = 1} what type of variable is this? integer is correct! Good job :D Question: Given the code, {variable = 1.1} what type of variable is this? float is correct! Good job :D Question: Given the code, {variable = &#39;Hello&#39;} what type of variable is this? bool is incorrect! Better luck next time :( You got a total of 8 out of 9 (88.89%)! . Code explanation . I import the getpass library that way I can personalize it and say the user name. The function question_with_response asks the question and returns the user answer, named msg. For every question in the list questions, I pass the variable msg into rsp and send it to the gradeResponse function, along with the corresponding answer. gradeResponse will then check if the answer is correct and award a point to the user if it is. At the end of the quiz, it will display how many out of the total questions were correct. .",
            "url": "https://dolphinalt.github.io/APCSP-Fastpages/jupyter/2020/02/24/python-quiz.html",
            "relUrl": "/jupyter/2020/02/24/python-quiz.html",
            "date": " ‚Ä¢ Feb 24, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages jupyter notebook test for APCSP",
            "content": "Python addition calculator . a=input(&quot;enter number 1: &quot;) b=input(&quot;enter number 2: &quot;) try: a=int(a) pass except: print(&quot;Please enter a number!&quot;) exit() try: b=int(b) pass except: print(&quot;Please enter a number!&quot;) exit() print(f&quot;{a}+{b}={a+b}&quot;) . 1+2=3 .",
            "url": "https://dolphinalt.github.io/APCSP-Fastpages/jupyter/2020/02/22/test.html",
            "relUrl": "/jupyter/2020/02/22/test.html",
            "date": " ‚Ä¢ Feb 22, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a ‚Äúlevel 1 heading‚Äù in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here‚Äôs a footnote 1. Here‚Äôs a horizontal rule: . . Lists . Here‚Äôs a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes ‚Ä¶and‚Ä¶ . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote.¬†&#8617; . |",
            "url": "https://dolphinalt.github.io/APCSP-Fastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " ‚Ä¢ Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Hi üëã! . My name is Ethan Zhao . I am in 10th grade at Del Norte high school! I enjoy.. . Cybersecurity üîê | Computer Programming üíª | Basketball üèÄ | . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats.¬†&#8617; . |",
          "url": "https://dolphinalt.github.io/APCSP-Fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ ‚Äúsitemap.xml‚Äù | absolute_url }} | .",
          "url": "https://dolphinalt.github.io/APCSP-Fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}